---
title: "Spatial Autocorrelation"
subtitle: "Using Moran's I to detect local clusters"
author: "Waldo Tobler"
institute: "Charles University"
# date: "today"
format:
    revealjs:
        theme: [default, ../assets/reveal.scss]
        logo: ../assets/icon.svg
        menu: false
        transition: slide
        navigation-mode: linear
        controls-layout: edges
        progress: true
        include-in-header: ../assets/font.html
        title-slide-attributes:
            data-background-image: ../assets/logos.png
            data-background-size: 20%
            data-background-position: 50% 90%
---


# Overview

* **AI model design:** June-October 2024
* **AI model development and training:** September-November 2024
* **European space-time urban strategy:** December-March 2025

---

## AI model design
* **Scale:** Pixel vs patch (size)
* **Task:** Classification vs segmentation
* **Models:** Network architectures and foundation models
* **Sampling and geospatial information**: Unbalanced dataset and spatial autocorrelation

---

## Final model: quick recap
* Embeddings from 25 x 25 pixel tiles
* Weighted XGBoost classifier

![](../figures/202502_progress_turing/model_comparison.png){.nostretch fig-align="middle" height="250"}

---

## Prediction pipeline
* Input: shapefile + satellite composite
    - creates tiles
    - creates embeddings 
    - loads classifiers and feeds in embeddings
* Output: spatial signature prediction

***github.com/eurofab-project/eo/tree/main/ai_pipeline***

---

## Understanding model performance

| Accuracy | Macro Acc. |  F1 (macro) | 
|------|------|------ |
|0.66 | 0.48 | 0.36 |

---

## Model performance 

* full dataset / test set

![](../figures/202502_progress_turing/model_performance_all.png){.nostretch fig-align="left" height="350"}
![](../figures/202502_progress_turing/model_performance_test.png){.nostretch fig-align="right" height="350"}

---

Inverse probability (ordered)

![](../figures/202502_progress_turing/1d_model_performance_test.png){.nostretch fig-align="middle" height="250"}

---

Inverse probability (ordered)

![](../figures/202502_progress_turing/1d_model_performance_test.png){.nostretch fig-align="middle" height="250"}
![](../figures/202502_progress_turing/1d_model_perf_test_grouped.png){.nostretch fig-align="middle" height="300"}



## Predictions across time

Number of changes from 2016 --> 2021

![](../figures/202502_progress_turing/frequency_map.png){.nostretch fig-align="middle" height="500"}


## Similarity across Years

| Year Transition | Overlap |
|----------------|---------|
| 2016 → 2017   | 0.88    |
| 2017 → 2018   | 0.88    |
| 2018 → 2019   | 0.86    |
| 2019 → 2020   | 0.86    |
| 2020 → 2021   | 0.88    |
| **2016 → 2021** | **0.88** |


## Understanding yearly change


![](../figures/202502_progress_turing/frequency_map.png){.nostretch fig-align="right" height="200"}


---

Class transitions across years

![](../figures/202502_progress_turing/class_transitions.png){.nostretch fig-align="left" height="350"}
![](../figures/202502_progress_turing/class_transitions_reasonable.png){.nostretch fig-align="right" height="350"}


---

![](../figures/202502_progress_turing/1d_transitions.png){.nostretch fig-align="right" height="350"}


---
## Potential aggregations for data product

based on
* model performance
* yearly transitions

![](../figures/202502_progress_turing/model_comp.png){.nostretch fig-align="right" height="200"}

---

*Model performance across aggregations*

| | Acc. | Macro Acc. | F1 (macro) | Granularity |
|------|------|-----------|----|-------|
| Spatial sig. | |  |  | 16 |
| Spatial + urbanity | 0.73 | 0.48 | 0.45 | 12 |
| Model performance 1d | 0.74 | 0.63 | 0.65 | 7 |
| Temp. high prob. | 0.74 | 0.62 | 0.58 | 7 |
| Temp. 1d | 0.74 | 0.63 | 0.58 | 6 |
| Visual grouping | 0.83 | 0.72 | 0.67 | 4 |
| (Non)urban | 0.97 | 0.83 | 0.78 | 2 |


---

## Comparison to reclustered baseline

Spatial singature dataset with K=7

NMI = 

## Next steps/ areas of improvement

Improve model
* Sampling
* Spatial weights

Transferability

Output maps
* Resolution/aggregations


