---
title: "EuroFab Progress Meeting"
author: "Eurofab team"
# institute: "Charles University"
date: "2024-10-04"
format:
    revealjs:
        theme: [default, ../assets/reveal.scss]
        logo: ../assets/icon.svg
        menu: false
        transition: slide
        navigation-mode: linear
        controls-layout: edges
        incremental: true
        progress: true
        include-in-header: ../assets/font.html
        title-slide-attributes:
            data-background-image: ../assets/logos.png
            data-background-size: 20%
            data-background-position: 50% 90%
---

## Agenda

1. Progress on morphometric components
2. Progress on imagery components
3. Progress on stakeholder components
4. Past and future events
5. Administrative appendix (if needed)


# Where we are

---

![ ](../figures/progress_august/gantchart.png)

# Key focus

::: {.r-fit-text .fragment}
WP 200<br>
Iterative Algorithm Desing<br>
and Data Collection Sprints
:::

# WP 200

1. Progress on morphometric components
2. Progress on imagery components

[Each including relevant data collection.]{.fragment}

# Progress on morphometric components

Morphometric classification homogenisation protocol

---

![ ](../figures/progress_october/worflow_chart.png)


---


## Protocol design
1. Use morphometric classification of Central Europe from a parallel research project as ground truth data
2. Calculate morphometric characters on subpar, but homogenous and widely available data, using enclosed tessellation cells (ETCs) as the base unit of analysis

## Protocol design
3. Train a supervised model to predict the classification of ETCs directly from the calculated morphometric characters, using the morphometric classification data as a target label

## Protocol design
4. Test the model on an out of training sample country to validate the approach.
    - Possibly Denmark / Italy / Spain
    - Calculate morphometric characters
    - Directly use the model to classify them into urban fabric types


## Input data collection and preprocessing

1. Morphometric classification of Central Europe (UPDATE)
2. Microsoft Building footprints
3. Overture Maps streets
4. Implementation


## Detailed morphometric classification
- It is based on cadastre building data (NEW) !
    - Processed from official APIs for all five countries
    - New data has ~11 million more buildings than EUBUCCO
    - Quality checks are still pending in some regions

## Detailed morphometric classification
- Uses Overture streets, therefore there will be some shared data between the classifications, making the model inference easier

## Data issues

---

### Problems with existing datasets - EUBUCCO, etc..

![Lots of missing and undocumented processed data](../figures/progress_october/bubenec.png)

---

### Problems with cadastre data - Germany, Poland, etc..

![Wrong and undocumented information - CRS, type, year, rate-limited APIs](../figures/progress_october/poland.png)

---

## Microsoft Building footprints
- Cover a large part of the globe - 1.5 billion building footprints.
- Available for the study region, whereas other sources such as Google footprints are not.
- Homogeneous origin - all footprints are derived using the same model.

---

### Examples

![Good coverage, but quality drops some places](../figures/progress_october/microsoft_prague.png)

---



## Overture Maps streets
- OpenStreetMap data with minimal processing, therefore it has good coverage
- The ground truth morphometric classification uses it
- The street network is simplified, preserving its topology, but removing unnecassary transportation artifacts

---


### Examples
![Simplified Overture street network](../figures/progress_october/street_network.png)

---

## Current implementation status
1. We have implemented a pipeline to process the Microsoft buildings and Overture streets
2. We have a scalable pipeline (8 mil and more inputs) to calculate the morphological characters, which will be the input to the EUROFAB model.

## Current implementation status
3. The core functionality for all of this was made available within open-source packages - `momepy`, `libpysal`, `sgeop`
4. Existing draft of technical notes, to be delivered two weeks before the Milestone 1 in December


# Model development

---

## Target - Urban taxonomy

- Hierarchical classification of urban fabric
- Allows flexibility in the resolution of the classification to be predicted
- At the moment, tested at a fixed level

---

### Urban Fabric Examples

![Medieval, Victorian-era and 'Large, open' urban fabrics)](../figures/progress_october/prague_example1.png)

---

### Urban Fabric Examples

![Modern, Victorian-era and villas](../figures/progress_october/prague_example2.png)

---

### Urban Fabric Examples

![First mode iteration coarse hierarchy cut](../figures/progress_october/prague_example3.png)

---

<!-- removing this as we should probably treat the classification as the input here
### Cadastre data processing methodology
1. Generate core spatial units for the entire study area and Calculate morphometric characteristics
2. Generate morphotopes - smallest homegenous urban region
3. Generate the urban fabrics - clusters of morphotopes with the same morphology -->

---

### Subpar data processing methodology

1. Generate core spatial units for the entire study area and calculate morphometric characteristics
2. Train model to predict to urban fabric types using the detailed morphology as a ground truth
3. Use the model to predict urban fabrics across Central Europe


## First model iteration

- Random forest. Next steps will involve gradient boosting trees and then more advanced NNs.
- The goal is to keep the final model as simple, scalable and interpretable as possible.
- Stratified k-fold train/test splits based on spatial contiguity preventing spatial leakage in the test set - accuracy of **0.95** with random sampling vs **0.68** with spatial stratification.


## First iteration results

![](../figures/progress_october/first_result.png)

##  Next steps
1. Refine data processing pipeline
3. Start iterating on model development.
4. Write validation and comparison schemes to examine model results at different scales of the detailed cadastre classification.

# Progress on imagery components

AI model design and development


## Review: AI model design
* **Scale:** Pixel vs patch (size)
* **Task:** Classification vs segmentation
* **Model:** Network architectures and foundation models


# Baseline

![](../figures/progress_october_turing/baseline.png){.nostretch fig-align="center" height="400"}


---

## Baseline: Results

![](../figures/progress_october_turing/baseline_tile_level.png){.nostretch fig-align="center" height="420"}


# WP 202: AI model design

![](../figures/progress_october_turing/overview.png){.nostretch fig-align="center"}


## Data preprocessing

* 224 x 224 x 3 image tiles
    - 26,942 tiles (.tif)

* Labels:
    - Spatial signatures (.tif)

- Train/test split: stratified 80/20% (stratified by distribution in dataset)

---

### Train/test
80/20%
![](../figures/progress_october_turing/train_df.png){.nostretch fig-align="left" height="400"}
![](../figures/progress_october_turing/test_df.png){.nostretch fig-align="right" height="400"}


---

### Unbalanced dataset

![](../figures/progress_october_turing/unbalanced.png){.nostretch fig-align="center" height="420"}

---

### Example

![](../figures/progress_october_turing/random_sample.png){.nostretch fig-align="center" height="420"}

---


## Model design
![](../figures/progress_october_turing/example.png){.nostretch fig-align="center" height="400"}

## Model design
![](../figures/progress_october_turing/setup.png){.nostretch fig-align="center"}


## Backbone: foundation models

- Satlas
- Clay
- IBM/NASA (Prithvi)

![](../figures/202408_progress_august_AT/foundation_models.png){.nostretch fig-align="center" height="200"}


---

## Comparison of backbones

| Model | Architecture | #Labels | Images |
|---------|:-----|------:|:------:|
| Satlas   | SwinT    | 302M | Sentinel-2  |
| Clay     | MAE/ViT  | 70M  |Sentinel-2/Landsat/NAIP/LINZ |
| Prithvi | MAE/ViT  | 250 PB |  Sentinel-2/Landsat   |


## Loss

* **CrossEntropy Loss** ("ce"):
    - penalizes pixel-wise misclassifications

* **Focal Loss** ("focal"):
    - reduces the contribution of easily classified examples and puts more weight on hard-to-classify pixels.

## Validation metric

* **IoU** (Intersection over Union)
    - Overlap between predicted and ground truth segmentations; 0 (no overlap) to 1 (perfect overlap).

* **F1 Score** (Weighted)
    - Balancing precision (how much of the prediction is correct) and recall (how much of the actual segmentation is captured).

## Validation metric

* **Accuracy** (Weighted)
    - Percentage of correctly classified pixels.

---

### Model A: Satlas
![](../figures/progress_october_turing/satlas_model.png){.nostretch fig-align="center" height="400"}

---

### Model B: Clay
![](../figures/progress_october_turing/clay_model.png){.nostretch fig-align="center" height="400"}

---

### Model C: Prithvi
![](../figures/progress_october_turing/prithvi_model.png){.nostretch fig-align="center" height="400"}


---


### Results: fine-tuning

| Model          | Satlas | Clay   | Prithvi |
|----------------|--------|--------|---------|
| Run time (per epoch) (with GPU)  | 9 mins | 8 mins | 20 mins |
| # parameters      | 90M | 86M  | 120M |
| Implementation | 5/10   | 6/10   | 7/10    |
| Hyperparameter tracking   | Own setup | Wandb.ai | Tensorboard |

---

### Results: fine-tuning 10 epochs

|           | Satlas | Clay   | Prithvi |
|----------------|--------|--------|---------|
| Accuracy (weighted)     | 0.57   | **0.72**   | 0.62    |
| IoU (weighted) (0-1)    | 0.33  | **0.58**  | 0.41   |
| F1 (weighted)          | 0.41  | **0.69**  | 0.58   |


Without hyperparameter tuning!

---

### Results: fine-tuning w/ focal loss

|           | Satlas | Clay   | Prithvi |
|----------------|--------|--------|---------|
| Accuracy (weighted)      | 0.25  | **0.72**   | 0.59     |
| IoU (weighted) (0-1)  | 0.2  | **0.58**  | 0.42   |
| F1 (weighted)     | 0.21  | **0.69**  | 0.59    |

---


## Prithvi: CE vs focal loss

![](../figures/progress_october_turing/class_acc_ce_loss.png){.nostretch fig-align="left" height="300"}
![](../figures/progress_october_turing/class_acc_focal_loss_prithvi.png){.nostretch fig-align="right" height="300"}


## Clay predictions

![](../figures/progress_october_turing/class_acc.png){.nostretch fig-align="center" height="430"}


## Summary: model comparison

- Clay is the winner!
- Training loss is important
- Some classes still very much underdetected!


## Next steps

- Technical write-up
- Hyperparameter-tuning
- Data augmentation
- Comparison to baseline
    - downsample/ upsample
    - maps


# Progress on stakeholder components

# Past and future events

## Past

Urbis 24, Frascati

## Future

World Urban Forum, Cairo, November 6th @ 15:30

_Monitoring urban fabric for data-driven planning and decision-making_

# What is next

- Milestone 1 (6 months)